{"ast":null,"code":"var _jsxFileName = \"/home/karthik_prasanna/Desktop/food-ordering-website/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\nimport LoginPage from './components/login/loginpage';\nimport CustomerPage from './components/customer/app';\nimport VendorPage from './components/vendor/app';\n\nfunction App() {\n  const [ID, setID] = useState(\"0\");\n  const [type, setType] = useState(\"0\"); //setID(localStorage.getItem('DASS_USERID'))\n  //let a = localStorage.getItem('DASS_USERID')\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    let a = localStorage.getItem('DASS_USERID');\n    console.log(\"a:\", a);\n\n    if (!a || a == 0 || a == \"\") {\n      setID(\"0\");\n      localStorage.setItem('DASS_USERID', '');\n    } else {\n      setID(a);\n      axios.get('http://localhost:4000/user/get_type/' + a).then(response => {\n        console.log(response.data);\n        setType(response.data);\n\n        if (response.data == \"\") {\n          setID(\"0\");\n          localStorage.setItem('DASS_USERID', '');\n        }\n      });\n    }\n  }, []);\n\n  if (ID == \"0\") {\n    return React.createElement(LoginPage, {\n      setID: setID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  } else {\n    // find the type of the user\n    if (type == \"Customer\") return React.createElement(CustomerPage, {\n      setID: setID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });else if (type == \"Vendor\") return React.createElement(VendorPage, {\n      setID: setID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });else {\n      return React.createElement(LoginPage, {\n        setID: setID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/home/karthik_prasanna/Desktop/food-ordering-website/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Link","axios","LoginPage","CustomerPage","VendorPage","App","ID","setID","type","setType","a","localStorage","getItem","console","log","setItem","get","then","response","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AACA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcZ,QAAQ,CAAC,GAAD,CAA5B;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,GAAD,CAAhC,CAFa,CAGb;AAEA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AAEd;AACA,QAAIc,CAAC,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBJ,CAAlB;;AACA,QAAI,CAACA,CAAD,IAAMA,CAAC,IAAI,CAAX,IAAgBA,CAAC,IAAI,EAAzB,EAA6B;AAAEH,MAAAA,KAAK,CAAC,GAAD,CAAL;AAAYI,MAAAA,YAAY,CAACI,OAAb,CAAqB,aAArB,EAAoC,EAApC;AAA0C,KAArF,MACK;AACHR,MAAAA,KAAK,CAACG,CAAD,CAAL;AACAT,MAAAA,KAAK,CAACe,GAAN,CAAU,yCAAyCN,CAAnD,EACGO,IADH,CACQC,QAAQ,IAAI;AAChBL,QAAAA,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACC,IAArB;AACAV,QAAAA,OAAO,CAACS,QAAQ,CAACC,IAAV,CAAP;;AACA,YAAID,QAAQ,CAACC,IAAT,IAAiB,EAArB,EACC;AAAEZ,UAAAA,KAAK,CAAC,GAAD,CAAL;AAAYI,UAAAA,YAAY,CAACI,OAAb,CAAqB,aAArB,EAAoC,EAApC;AAAyC;AACzD,OANH;AAOD;AACF,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIT,EAAE,IAAI,GAAV,EAAe;AACb,WACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD,MAKK;AACH;AAEA,QAAKC,IAAI,IAAK,UAAd,EACE,OACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAED,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,KAIK,IAAKC,IAAI,IAAK,QAAd,EACH,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAED,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADG,KAIC;AACF,aACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;AACJ;AAEF;;AAGD,eAAeF,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport axios from 'axios';\n\nimport LoginPage from './components/login/loginpage'\nimport CustomerPage from './components/customer/app'\nimport VendorPage from './components/vendor/app'\nfunction App() {\n  const [ID, setID] = useState(\"0\");\n  const [type, setType] = useState(\"0\")\n  //setID(localStorage.getItem('DASS_USERID'))\n\n  //let a = localStorage.getItem('DASS_USERID')\n  useEffect(() => {\n\n    // Update the document title using the browser API\n    let a = localStorage.getItem('DASS_USERID')\n    console.log(\"a:\", a)\n    if (!a || a == 0 || a == \"\") { setID(\"0\"); localStorage.setItem('DASS_USERID', ''); }\n    else {\n      setID(a)\n      axios.get('http://localhost:4000/user/get_type/' + a)\n        .then(response => {\n          console.log(response.data)\n          setType(response.data)\n          if (response.data == \"\")\n           { setID(\"0\"); localStorage.setItem('DASS_USERID', '');}\n        })\n    }\n  }, []);\n  \n  if (ID == \"0\") {\n    return (\n      <LoginPage setID={setID} />\n    );\n  }\n  else {\n    // find the type of the user\n\n    if ( type  == \"Customer\")\n      return (\n        <CustomerPage setID={setID} />\n      )\n    else if ( type  == \"Vendor\")\n      return (\n        <VendorPage setID={setID} />\n      )\n      else{\n        return (\n          <LoginPage setID={setID} />\n        );\n      }\n  }\n\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}